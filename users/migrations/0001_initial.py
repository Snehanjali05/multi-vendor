# Generated by Django 5.0.6 on 2024-06-30 13:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import users.utils
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('menu', '0002_initial'),
        ('restaurant', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address_line1', models.CharField(max_length=128)),
                ('address_line2', models.CharField(blank=True, max_length=128, null=True)),
                ('city', models.CharField(max_length=32)),
                ('state', models.CharField(max_length=32)),
                ('postal_code', models.CharField(max_length=8)),
                ('country', models.CharField(max_length=32)),
                ('address_type', models.CharField(choices=[('home', 'HOME'), ('work', 'WORK')], max_length=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=16)),
                ('mobile', models.CharField(db_index=True, max_length=16, validators=[users.utils.validate_phone_number])),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, validators=[users.utils.validate_lowercase_email])),
                ('dob', models.DateTimeField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('male', 'MALE'), ('female', 'FEMALE'), ('undefined', 'UNDEFINED')], max_length=16)),
                ('preferred_language', models.CharField(default='en', max_length=16)),
                ('preferred_currency', models.CharField(default='USD', max_length=8)),
                ('account_status', models.CharField(choices=[('active', 'ACTIVE'), ('deactivated', 'DEACTIVATED'), ('suspended', 'SUSPENDED')], max_length=16)),
                ('notification_preferrence', models.CharField(choices=[('email', 'EMAIL'), ('sms', 'SMS'), ('push_notification', 'PUSH')], max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('address_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='users.address')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mobile', models.CharField(db_index=True, max_length=16, validators=[users.utils.validate_phone_number])),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, validators=[users.utils.validate_lowercase_email])),
                ('loyality_points', models.IntegerField(default=0)),
                ('preferred_payment_method', models.CharField(choices=[('credit_card', 'CREDIT_CARD'), ('debit_card', 'DEBIT_CARD'), ('paypal', 'PAYPAL'), ('cash', 'CASH'), ('bank_transfer', 'BANK_TRANSFER')], max_length=16)),
                ('account_status', models.CharField(choices=[('active', 'ACTIVE'), ('deactivated', 'DEACTIVATED'), ('suspended', 'SUSPENDED')], max_length=16)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('address_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='users.address')),
                ('fav_dishes', models.ManyToManyField(to='menu.menuitem')),
                ('fav_restaurants', models.ManyToManyField(to='restaurant.restaurant')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryPersonProfile',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mobile', models.CharField(db_index=True, max_length=16, unique=True, validators=[users.utils.validate_phone_number])),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, validators=[users.utils.validate_lowercase_email])),
                ('vehicle_type', models.CharField(choices=[('bike', 'BIKE'), ('scooter', 'SCOOTER'), ('mini_van', 'MINI_VAN'), ('electric_bike', 'ELECTRIC_BIKE')], max_length=16)),
                ('vehicle_number', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(message='enter a valid vehicle number', regex='^[A-Z]{2}\\d{2}[A-Za-z0-9]{6}$')])),
                ('driver_license', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid driver license', regex='^[A-Z]{2}-?\\d{2}\\d{4}\\d+$')])),
                ('availability_status', models.CharField(choices=[('available', 'AVAILABLE'), ('busy', 'BUSY'), ('off_duty', 'OFF_DUTY')], max_length=16)),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('total_deliveries', models.IntegerField()),
                ('account_status', models.CharField(choices=[('active', 'ACTIVE'), ('deactivated', 'DEACTIVATED'), ('suspended', 'SUSPENDED')], max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('address_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='users.address')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VendorProfile',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_name', models.CharField(max_length=32)),
                ('business_license', models.CharField(max_length=32, unique=True)),
                ('tax_id', models.CharField(max_length=32, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, validators=[users.utils.validate_lowercase_email])),
                ('mobile', models.CharField(db_index=True, max_length=16, unique=True, validators=[users.utils.validate_phone_number])),
                ('website', models.URLField(validators=[django.core.validators.URLValidator])),
                ('social_media_links', models.URLField()),
                ('description', models.TextField()),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('total_orders', models.IntegerField()),
                ('account_status', models.CharField(choices=[('active', 'ACTIVE'), ('deactivated', 'DEACTIVATED'), ('suspended', 'SUSPENDED')], max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business_address', models.OneToOneField(max_length=128, on_delete=django.db.models.deletion.PROTECT, to='users.address')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
