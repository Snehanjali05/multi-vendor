# Generated by Django 5.0.6 on 2024-06-30 13:15

import django.core.validators
import restaurant.utils
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
                ('mobile', models.CharField(db_index=True, max_length=16, unique=True, validators=[restaurant.utils.validate_phone_number])),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, validators=[restaurant.utils.validate_lowercase_email])),
                ('website', models.URLField(blank=True, null=True, validators=[django.core.validators.URLValidator])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantCategory',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('Italian', 'ITALIAN'), ('Chinese', 'CHINESE'), ('Mexican', 'MEXICAN'), ('Indian', 'INDIAN'), ('French', 'FRENCH')], db_index=True, max_length=8)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantHours',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day_of_week', models.CharField(choices=[('monday', 'MONDAY'), ('tuesday', 'TUESDAY'), ('wednesday', 'WEDNESDAY'), ('thursday', 'THURSDAY'), ('friday', 'FRIDAY'), ('saturday', 'SATURDAY'), ('sunday', 'SUNDAY')], max_length=16)),
                ('opening_time', models.TimeField(validators=[restaurant.utils.validate_opening_closing_times])),
                ('closing_time', models.TimeField(validators=[restaurant.utils.validate_opening_closing_times])),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['restaurant_id', 'day_of_week'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantPhoto',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo', models.ImageField(upload_to='restaurant_photos/')),
                ('description', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantRevenue',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_revenue', models.DecimalField(db_index=True, decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('avg_cost', models.DecimalField(db_index=True, decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_orders', models.IntegerField(default=0)),
                ('date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
    ]
